{"version":3,"sources":["services/post.service.mock.tsx","services/comment.service.mock.tsx","services/api.tsx","services/async.tsx","components/BlogDetail/BlogDetail.tsx","components/Header/Header.tsx","components/SideNav/SideNav.tsx","components/List/List.tsx","components/Write/Write.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["posts","id","title","content","createdBy","createdAt","updatedAt","PostServiceMock","getPosts","Promise","resolve","setTimeout","getPost","foundPost","find","post","writePost","push","updatePost","foundIndex","findIndex","_","assign","deletePost","splice","comments","CommentServiceMock","getComments","getComment","foundComment","comment","writeComment","updateComment","deleteComment","initial","AndyContext","createContext","useAndy","useContext","asyncReducer","state","action","type","loading","data","error","useAsync","promiseFn","useReducer","dispatch","run","a","useAsyncEffect","params","deps","useEffect","BlogDetail","props","andy","useParams","asyncEffectState","parseInt","postId","message","className","Header","css","defaultProps","pubUrl","process","SideNav","useState","src","menus","map","menu","idx","hidden","key","to","path","label","children","exact","route","index","component","styleCss","List","history","useHistory","confirmDelete","window","confirm","then","success","onClick","Write","App","style","imageUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96d20f23.chunk.js","sourcesContent":["import {Post} from \"../object-model/model\";\nimport _ from \"lodash\";\n\n\nconst posts: Post[] = [\n    {\n        id: 0,\n        title: \"게시글 0\",\n        content: \"게시글 0 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 1,\n        title: \"게시글 1\",\n        content: \"게시글 1 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 2,\n        title: \"게시글 2\",\n        content: \"게시글 2 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 3,\n        title: \"게시글 3\",\n        content: \"게시글 3 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 4,\n        title: \"게시글 4\",\n        content: \"게시글 4 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 5,\n        title: \"게시글 5\",\n        content: \"게시글 5 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 6,\n        title: \"게시글 6\",\n        content: \"게시글 6 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 7,\n        title: \"게시글 7\",\n        content: \"게시글 7 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n];\n\nexport const PostServiceMock = {\n    getPosts: () => {\n        const promise: Promise<Post[]> = new Promise(resolve=>{\n            setTimeout(()=>{\n                resolve(posts);\n            }, 500);\n        });\n        return promise;\n    },\n    getPost: (id: unknown) => {\n        const foundPost: Post | undefined = posts.find((post: Post) => {\n            return post.id === id\n        });\n\n\n        return Promise.resolve(foundPost);\n    },\n    writePost: (post: Post) => {\n        posts.push(post);\n        return Promise.resolve(1);\n    },\n    updatePost: (id: number, post: Post) => {\n        const foundPost: Post | undefined = posts.find((post: Post) => {\n            return post.id === id\n        });\n\n        const foundIndex: number = posts.findIndex((post: Post) => {\n            return post.id === id\n        });\n\n        posts[foundIndex] = _.assign(foundPost, post);\n\n\n        return Promise.resolve(1);\n    },\n    deletePost: (id: number) => {\n        const foundIndex: number = posts.findIndex((post: Post) => {\n            return post.id === id\n        });\n\n        if (foundIndex !== -1) {\n            posts.splice(foundIndex, 1);\n            return Promise.resolve(1);\n        } else {\n            return Promise.resolve(0);\n        }\n    }\n}","import {Comment, Post} from \"../object-model/model\";\n\nconst comments: Comment[] = [\n    {\n        id: 1,\n        content: \"댓글 1 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 2,\n        content: \"댓글 2 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 3,\n        content: \"댓글 3 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 4,\n        content: \"댓글 4 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 5,\n        content: \"댓글 5 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 6,\n        content: \"댓글 6 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 7,\n        content: \"댓글 7 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 8,\n        content: \"댓글 8 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n];\n\n\nexport const CommentServiceMock = {\n    getComments: () => {\n        return Promise.resolve(comments)\n    },\n    getComment: (id: number) => {\n        const foundComment: Comment | undefined = comments.find((comment: Comment) => {\n            return comment.id == id\n        })\n        return Promise.resolve(foundComment)\n    },\n    writeComment: (comment: Comment) => {\n        return Promise.resolve(1);\n    },\n    updateComment: (id: number, comment: Comment) => {\n        return Promise.resolve(1);\n    },\n    deleteComment: (id: number) => {\n        return Promise.resolve(1);\n    }\n}","import React, {createContext, useContext} from 'react';\nimport {AndyService} from \"../object-model/model\";\nimport {PostServiceMock} from \"./post.service.mock\";\nimport {CommentServiceMock} from \"./comment.service.mock\";\n\n\nconst initial: AndyService = {\n    post: PostServiceMock,\n    comment: CommentServiceMock,\n};\n\nexport const AndyContext = createContext<AndyService>(initial);\nexport const useAndy = (): AndyService => useContext<AndyService>(AndyContext);\n\ntype AndyProviderProps = {\n    andy: AndyService;\n    children: JSX.Element | JSX.Element[];\n};\n\nexport const AndyProvider = (props: AndyProviderProps): JSX.Element => {\n    let andy: AndyService = useContext(AndyContext);\n\n    if (props.andy !== andy) {\n        andy = props.andy || null;\n    }\n\n    return <AndyContext.Provider value={andy}>{props.children}</AndyContext.Provider>;\n};\n","import {useReducer, useEffect} from 'react';\n\ntype LoadingAction = {\n    type: 'LOADING';\n};\n\ntype SuccessAction<T> = {\n    type: 'SUCCESS';\n    data: T;\n};\n\ntype ErrorAction<T> = {\n    type: 'ERROR';\n    error: T;\n};\n\ntype AsyncAction<D, E> = LoadingAction | SuccessAction<D> | ErrorAction<E>;\n\nexport type AsyncState<D, E> = {\n    loading: boolean;\n    data: D | null;\n    error: E | null;\n};\n\nexport type AsyncEffectState<D, E, F> = {\n    state: AsyncState<D, E>;\n    run: () => void;\n};\n\nfunction asyncReducer<D, E>(\n    state: AsyncState<D, E>,\n    action: AsyncAction<D, E>\n): AsyncState<D, E> {\n    switch (action.type) {\n        case 'LOADING':\n            return {\n                loading: true,\n                data: null,\n                error: null\n            };\n        case 'SUCCESS':\n            return {\n                loading: false,\n                data: action.data,\n                error: null\n            };\n        case 'ERROR':\n            return {\n                loading: false,\n                data: null,\n                error: action.error\n            };\n    }\n}\n\nexport type PromiseFn<T> = (...args: T[]) => Promise<T>;\n\n\nfunction useAsync<D, E, F extends PromiseFn<D>>(promiseFn: F, deps = []) {\n    const [state, dispatch] = useReducer(asyncReducer, {\n        loading: false,\n        data: null,\n        error: null\n    } as AsyncState<D, E>);\n\n    async function run(...params: Parameters<F>) {\n        dispatch({type: 'LOADING'});\n        try {\n            const data = await promiseFn(...params);\n            dispatch({\n                type: 'SUCCESS',\n                data\n            });\n        } catch (e) {\n            dispatch({\n                type: 'ERROR',\n                error: e\n            });\n        }\n    }\n\n\n    return [state, run] as const;\n}\n\nfunction useAsyncEffect<D, E, F extends PromiseFn<D>>(\n    promiseFn: F,\n    params: Parameters<F>,\n    deps: unknown[]\n) {\n    const [state, run] = useAsync<D, E, F>(promiseFn);\n    useEffect(\n        () => {\n            run(...params);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        deps\n    );\n\n    return {\n        state: state,\n        run: run\n    } as AsyncEffectState<D, E, F>;\n}\n\nexport default useAsync;\nexport {useAsyncEffect};","import React from 'react';\nimport {useAndy} from \"../../services/api\";\nimport {AndyService, Post, PostService} from \"../../object-model/model\";\nimport {AsyncEffectState, PromiseFn, useAsyncEffect} from \"../../services/async\";\nimport { useParams } from 'react-router-dom'\n\nexport interface BlogDetailProps {\n}\n\nexport const BlogDetail = (props: BlogDetailProps) => {\n    const andy: AndyService = useAndy()\n    const params:any = useParams()\n\n    const asyncEffectState: AsyncEffectState<Post | undefined, Error, PromiseFn<Post | undefined>> = useAsyncEffect(andy.post.getPost, [parseInt(params.postId)], [])\n\n    if (asyncEffectState.state.loading) return <div>Loading...</div>\n    if (asyncEffectState.state.error) return <div>Something went wrong: ${asyncEffectState.state.error.message}</div>\n    if (!asyncEffectState.state.data) return (<div>게시글이 없습니다.</div>)\n\n    return (\n        <div className=\"BlogDetail\">\n            {asyncEffectState.state.data.title}\n        </div>\n    );\n}","import React from 'react';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx, css} from '@emotion/react'\n\nfunction style() {\n    return css `\n         background-color: #5882FA;\n         color: white;\n         height: 50px;\n         img {\n          height: 100%;\n         }\n     `\n}\n\nexport interface HeaderProps {\n    imageUrl?: string\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <div className=\"Header\"\n             css={style()}>\n            jinhyeong_blog\n        </div>\n    );\n}\n\nHeader.defaultProps = {}","import React, {useEffect, useState} from 'react';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx, css} from '@emotion/react'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    Link\n} from \"react-router-dom\";\n\nfunction style() {\n    return css`\n      display: flex;\n      justify-content: flex-start;\n      height: 100%;\n      #sideNav {\n          width: 20%;\n          height: 100%;\n          background-color: #1a506d;\n          color: #ffffff;\n          .sideNavMenu {\n            cursor: pointer;\n            margin-top: 20px;\n            font-weight: bold;\n            font-size: 16px;\n          }\n      }\n      #content {\n          width: 80%;\n          height: 100%;\n          .main-content {\n            padding-top: 20px;\n          }\n      }\n    `\n}\n\nexport interface Menu {\n    path: string,\n    exact?: boolean,\n    label: string,\n    component: () => JSX.Element\n    hidden?: boolean,\n}\n\nexport interface SideNavProps {\n    menus: Menu[]\n    children?: JSX.Element[] | JSX.Element\n}\n\nconst pubUrl = process.env.PUBLIC_URL;\n\nexport const SideNav = (props: SideNavProps) => {\n    const [selectedMenuIndex, setSelectedMenuIndex] = useState(0);\n    // let selectedMenuIndex = 0\n\n    // useEffect(() => {\n    // }, [selectedMenuIndex])\n\n\n    return (\n        <Router>\n            <div className=\"SideNav\"\n                 css={style()}>\n                <div id={\"sideNav\"}>\n                    <img src={\"https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1603679690/noticon/g16oddfpbk4wci2ec7nr.gif\"}></img>\n                    {\n                        props.menus.map((menu: Menu, idx: number) => {\n                            if (menu.hidden) return null;\n                            else return <div key={idx}\n                                             className={\"sideNavMenu\"}>\n                                <Link to={pubUrl + menu.path}>{menu.label}</Link>\n                            </div>\n                        })\n                    }\n                </div>\n                <div id={\"content\"}>\n                    {props.children}\n                    <Switch>\n                        <Route exact path={[\"/\", pubUrl]}>\n                            <Redirect to={pubUrl + props.menus[0].path} />\n                        </Route>\n                        <Route exact path=\"/andy-blog\">\n                            <Redirect to={pubUrl + props.menus[0].path} />\n                        </Route>\n                        {props.menus.map((route, index) => (\n                            // Render more <Route>s with the same paths as\n                            // above, but different components this time.\n                            <Route\n                                key={index}\n                                path={pubUrl + route.path}\n                                exact={route.exact}\n                                children={<route.component />}\n                            />\n                        ))}\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nSideNav.defaultProps = {}","import React from 'react';\nimport {useAndy} from \"../../services/api\";\nimport {Post} from \"../../object-model/model\";\nimport {useHistory} from \"react-router-dom\";\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx, css} from '@emotion/react';\n\nimport {AsyncEffectState, AsyncState, PromiseFn, useAsyncEffect} from \"../../services/async\";\n\nexport interface ListProps {\n}\n\nconst styleCss = css`\n        display: flex;\n        flex-direction:  column;\n        align-items: center;\n        margin-top: 10px;\n        .post-item{\n          width: 80%;\n          display: flex;\n          border: solid 1px black;\n          justify-content: center;\n          padding: 10px;\n          margin-top: 10px;\n          button {\n            margin-left: 10px;\n          }\n        }\n  `;\n\nconst pubUrl = process.env.PUBLIC_URL;\n\nexport const List = (props: ListProps) => {\n    const andy = useAndy()\n    const history = useHistory();\n\n    // const posts = useAsync({promiseFn: andy.post.getPosts})\n    //\n    //\n\n    //\n    // if (posts.isPending) return <div>Loading...</div>\n    // if (posts.error) return <div>Something went wrong: ${posts.error.message}</div>\n    // if (!posts.data) return (<div>게시글이 없습니다.</div>)\n\n    const asyncEffectState: AsyncEffectState<Post[], Error, PromiseFn<Post[]>> = useAsyncEffect<Post[], Error, PromiseFn<Post[]>>(andy.post.getPosts, [], [])\n\n    const deletePost = (postId: number) => {\n        andy.post.deletePost(postId)\n            .then((success: number) => {\n                asyncEffectState.run();\n            });\n    }\n\n    function updatePost(postId: number) {\n    }\n\n    function viewPost(postId: number) {\n        history.push(pubUrl + \"/post/\" + postId);\n    }\n\n    function confirmDelete(postId: number) {\n        if (window.confirm(\"정말 지우시겠습니까?\")) {\n            deletePost(postId);\n        }\n    }\n\n    if (!asyncEffectState.state) return null;\n    if (asyncEffectState.state.loading) return <div>loading...</div>;\n    if (asyncEffectState.state.error) return <div>error</div>;\n    if (!asyncEffectState.state.data) return null;\n\n    return (\n        <div className=\"List\" css={[styleCss]}>\n            {asyncEffectState.state && asyncEffectState.state.data && asyncEffectState.state.data.map((post: Post, idx: number) => {\n                return (\n                    <div className={\"post-item\"}>\n                        <div>{post.title}</div>\n                        <button onClick={() => {\n                            viewPost(post.id);\n                        }}>상세 보기\n                        </button>\n                        <button>수정 하기</button>\n                        <button onClick={() => {\n                            confirmDelete(post.id);\n                        }}>지우기\n                        </button>\n                    </div>\n                )\n            })}\n        </div>\n    );\n}","import React from 'react';\n\nexport interface WriteProps {\n}\n\nexport const Write = (props: WriteProps) => {\n    return (\n        <div className=\"Write\">\n            글 쓰기\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport {BlogDetail} from \"./components/BlogDetail/BlogDetail\";\nimport {Header} from \"./components/Header/Header\";\nimport {Menu, SideNav} from \"./components/SideNav/SideNav\";\nimport {List} from \"./components/List/List\";\nimport {Write} from \"./components/Write/Write\";\n\nfunction App() {\n\n    let menus: Menu[] = [\n        {\n            path: \"/post\",\n            exact: true,\n            label: \"게시글 리스트\",\n            component: () => <List></List>\n        },\n        {\n            path: \"/post/:postId\",\n            label: \"상세 페이지\",\n            component: () => <BlogDetail></BlogDetail>\n        },\n        {\n            path: \"/write\",\n            label: \"글쓰기\",\n            component: () => <Write></Write>\n        }\n    ];\n\n\n    return (\n        <div className=\"App\" style={{\"height\": \"100%\"}}>\n            <SideNav menus={menus}>\n                <Header imageUrl={\"https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1603852170/noticon/iwbd31aaoxcxh1ololsi.png\"}></Header>\n            </SideNav>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}